{
    "code": "import pandas as pd\nimport os\n\nupload_dir = 'uploads/612b538a-3f73-4095-b9bf-5e7b27ff2743'\nif not os.path.exists(upload_dir):\n    os.makedirs(upload_dir)\n\ninput_csv_path = 'uploads/612b538a-3f73-4095-b9bf-5e7b27ff2743/sample-sales.csv'\noutput_csv_path = os.path.join(upload_dir, 'data.csv')\nmetadata_file_path = os.path.join(upload_dir, 'metadata.txt')\n\n# Read the CSV file\ndf = pd.read_csv(input_csv_path)\n\n# Save the DataFrame to data.csv\ndf.to_csv(output_csv_path, index=False)\n\n# Collect metadata and write to metadata.txt\nwith open(metadata_file_path, 'w') as f:\n    f.write('--- DataFrame Info ---\\n')\n    df.info(buf=f)\n    f.write('\\n--- DataFrame Columns ---\\n')\n    f.write(str(df.columns.tolist()))\n    f.write('\\n\\n--- DataFrame Head ---\\n')\n    f.write(df.head().to_string())\n    f.write('\\n\\n--- Collected Files ---\\n')\n    f.write(f'File: {output_csv_path}\\n')\n    f.write('Description: Primary sales data collected from sample-sales.csv\\n')\n    f.write('\\n--- Expected JSON Answer Format ---\\n')\n    f.write('{\\n')\n    f.write('  \"total_sales\": number,\\n')\n    f.write('  \"top_region\": string,\\n')\n    f.write('  \"day_sales_correlation\": number,\\n')\n    f.write('  \"bar_chart\": base64 PNG string,\\n')\n    f.write('  \"median_sales\": number,\\n')\n    f.write('  \"total_sales_tax\": number,\\n')\n    f.write('  \"cumulative_sales_chart\": base64 PNG string\\n')\n    f.write('}\\n')\n",
    "comment": "Step-3: Getting scrap code and metadata from llm. Tries count = %d 0"
}